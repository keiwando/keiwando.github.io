
main();var pencilInputs={force:1.0,altitude:90,azimuth:270,movement:90,speed:0.0,bristleStiffness:0.0,bristleLength:1.0};var frameNum=1;var vertexSize=2;var displayMode=0;function basicQuadVshSource(){return`
  attribute vec4 position;
  attribute vec2 textureCoord;

  uniform mat4 modelViewMat;
  uniform mat4 projectionMat;

  varying vec2 vTextureCoord;

  void main() {
   gl_Position = projectionMat * modelViewMat * position;

   vTextureCoord = textureCoord;
  }
 `;}
function basicQuadFshSource(){return`
  precision highp float;

  uniform sampler2D texture;

  varying vec2 vTextureCoord;

  void main() {

   highp vec4 texColor = texture2D(texture, vTextureCoord);

   gl_FragColor = vec4(1.0, 1.0, 1.0, texColor.a);
  }
 `;}
function readShaderToString(filename){fetch(filename).then(response=>response.text()).then(text=>console.log(text))}
function main(){var vshSource="";fetch('/assets/brush-deformation/shaders/brush_distort.vsh').then(response=>response.text()).then(source=>vshSource=source).then(x=>fetch('/assets/brush-deformation/shaders/brush_distort.fsh').then(response=>response.text()).then(fshSource=>setupGL(vshSource,fshSource)));}
function setupGL(vshSource,fshSource){const canvas=document.querySelector('#glCanvas');const gl=canvas.getContext("webgl");if(!gl){alert("WebGL Unavailable!");return;}
gl.clearColor(0.1,0.1,0.1,1.0);gl.clear(gl.COLOR_BUFFER_BIT);const program=createGLProgram(gl,vshSource,fshSource);const programInfo={program:program,attribLocations:{position:gl.getAttribLocation(program,"position"),textureCoord:gl.getAttribLocation(program,"textureCoord")},uniformLocations:{force:gl.getUniformLocation(program,"force"),altitude:gl.getUniformLocation(program,"altitude"),azimuth:gl.getUniformLocation(program,"azimuth"),movementDirection:gl.getUniformLocation(program,"movementDirection"),speed:gl.getUniformLocation(program,"speed"),stiffness:gl.getUniformLocation(program,"stiffness"),bristleLength:gl.getUniformLocation(program,"bristleLength"),modelViewMat:gl.getUniformLocation(program,"modelViewMat"),projectionMat:gl.getUniformLocation(program,"projectionMat"),texture:gl.getUniformLocation(program,"texture"),frameNum:gl.getUniformLocation(program,"frameNum"),vertexSize:gl.getUniformLocation(program,"vertexSize"),displayMode:gl.getUniformLocation(program,"displayMode")}};const buffers=createQuadBuffers(gl);const texture=loadTexture(gl,"/assets/brush-deformation/webgl-textures/round.png");function render(){drawScene(gl,programInfo,buffers,texture);requestAnimationFrame(render);frameNum++;}
requestAnimationFrame(render);}
function drawScene(gl,programInfo,buffers,texture){gl.clearColor(0.1,0.1,0.1,1.0);gl.clearDepth(1.0);gl.enable(gl.DEPTH_TEST);gl.depthFunc(gl.LEQUAL);gl.enable(gl.BLEND);gl.blendFunc(gl.SRC_ALPHA,gl.ONE_MINUS_SRC_ALPHA);gl.clear(gl.COLOR_BUFFER_BIT|gl.DEPTH_BUFFER_BIT);const fieldOfView=45*Math.PI/180;const aspect=gl.canvas.clientWidth/gl.canvas.clientHeight;const zNear=0.1;const zFar=100.0;const projectionMatrix=mat4.create();const camWidth=6;mat4.perspective(projectionMatrix,fieldOfView,aspect,zNear,zFar);mat4.ortho(projectionMatrix,0,camWidth,0,camWidth,zNear,zFar);const modelViewMatrix=mat4.create();mat4.translate(modelViewMatrix,modelViewMatrix,[camWidth/2,camWidth/2,-6.0]);{const numComponents=2;const type=gl.FLOAT;const normalize=false;const stride=0;const offset=0;gl.bindBuffer(gl.ARRAY_BUFFER,buffers.positions);gl.vertexAttribPointer(programInfo.attribLocations.position,numComponents,type,normalize,stride,offset);gl.enableVertexAttribArray(programInfo.attribLocations.positions);}
{const num=2;const type=gl.FLOAT;const normalize=false;const stride=0;const offset=0;gl.bindBuffer(gl.ARRAY_BUFFER,buffers.textureCoords);gl.vertexAttribPointer(programInfo.attribLocations.textureCoord,num,type,normalize,stride,offset);gl.enableVertexAttribArray(programInfo.attribLocations.textureCoord);}
gl.useProgram(programInfo.program);gl.uniformMatrix4fv(programInfo.uniformLocations.projectionMat,false,projectionMatrix);gl.uniformMatrix4fv(programInfo.uniformLocations.modelViewMat,false,modelViewMatrix);bindPencilInputs(gl,programInfo);gl.uniform1f(programInfo.uniformLocations.frameNum,frameNum);gl.uniform1f(programInfo.uniformLocations.vertexSize,vertexSize);gl.uniform1f(programInfo.uniformLocations.displayMode,displayMode);gl.activeTexture(gl.TEXTURE0);gl.bindTexture(gl.TEXTURE_2D,texture);gl.uniform1i(programInfo.uniformLocations.texture,0);{const offset=0;gl.drawArrays(gl.TRIANGLE_STRIP,offset,4);}}
function loadTexture(gl,url){const texture=gl.createTexture();gl.bindTexture(gl.TEXTURE_2D,texture);const pixel=new Uint8Array([0,0,0,0]);gl.texImage2D(gl.TEXTURE_2D,0,gl.RGBA,1,1,0,gl.RGBA,gl.UNSIGNED_BYTE,pixel);const image=new Image();image.onload=function(){gl.bindTexture(gl.TEXTURE_2D,texture);gl.texImage2D(gl.TEXTURE_2D,0,gl.RGBA,gl.RGBA,gl.UNSIGNED_BYTE,image);if(isPowerOf2(image.width)&&isPowerOf2(image.height)){gl.generateMipmap(gl.TEXTURE_2D);gl.texParameteri(gl.TEXTURE_2D,gl.TEXTURE_MIN_FILTER,gl.LINEAR_MIPMAP_LINEAR);gl.texParameteri(gl.TEXTURE_2D,gl.TEXTURE_WRAP_S,gl.CLAMP_TO_EDGE);gl.texParameteri(gl.TEXTURE_2D,gl.TEXTURE_WRAP_T,gl.CLAMP_TO_EDGE);}else{gl.texParameteri(gl.TEXTURE_2D,gl.TEXTURE_MIN_FILTER,gl.LINEAR);gl.texParameteri(gl.TEXTURE_2D,gl.TEXTURE_WRAP_S,gl.CLAMP_TO_EDGE);gl.texParameteri(gl.TEXTURE_2D,gl.TEXTURE_WRAP_T,gl.CLAMP_TO_EDGE);}};image.src=url;return texture;}
function isPowerOf2(value){return(value&(value-1))==0;}
function bindPencilInputs(gl,program){gl.uniform1f(program.uniformLocations.force,pencilInputs.force);gl.uniform1f(program.uniformLocations.altitude,pencilInputs.altitude);gl.uniform1f(program.uniformLocations.azimuth,pencilInputs.azimuth);gl.uniform1f(program.uniformLocations.movementDirection,pencilInputs.movement);gl.uniform1f(program.uniformLocations.speed,pencilInputs.speed);gl.uniform1f(program.uniformLocations.stiffness,pencilInputs.bristleStiffness);gl.uniform1f(program.uniformLocations.bristleLength,pencilInputs.bristleLength);}
function createDistortionBuffers(gl){const positions=[0.0,0.0,-1.0,1.0,0.0,1.0,1.0,1.0,1.0,0.0,1.0,-1.0,0.0,-1.0,-1.0,-1.0,-1.0,0.0,-1.0,1.0];const textureCoords=[0.5,0.5,0.0,0.0,0.5,0.0,1.0,0.0,1.0,0.5,1.0,1.0,0.5,1.0,0.0,1.0,0.0,0.5,0.0,0.0];return createBuffers(gl,positions,textureCoords);}
function createQuadBuffers(gl){const positions=[1.0,1.0,-1.0,1.0,1.0,-1.0,-1.0,-1.0];const textureCoords=[1.0,0.0,0.0,0.0,1.0,1.0,0.0,1.0];return createBuffers(gl,positions,textureCoords);}
function createBuffers(gl,positions,textureCoords){const positionBuffer=gl.createBuffer();gl.bindBuffer(gl.ARRAY_BUFFER,positionBuffer);gl.bufferData(gl.ARRAY_BUFFER,new Float32Array(positions),gl.STATIC_DRAW);const textureCoordBuffer=gl.createBuffer();gl.bindBuffer(gl.ARRAY_BUFFER,textureCoordBuffer);gl.bufferData(gl.ARRAY_BUFFER,new Float32Array(textureCoords),gl.STATIC_DRAW);return{positions:positionBuffer,textureCoords:textureCoordBuffer};}
function createGLProgram(gl,vshSource,fshSource){const vertexShader=loadShader(gl,gl.VERTEX_SHADER,vshSource);const fragmentShader=loadShader(gl,gl.FRAGMENT_SHADER,fshSource);const program=gl.createProgram();gl.attachShader(program,vertexShader);gl.attachShader(program,fragmentShader);gl.linkProgram(program);if(!gl.getProgramParameter(program,gl.LINK_STATUS)){alert("Unable to link the program: "+gl.getProgramInfoLog(program));return null;}
return program;}
function loadShader(gl,type,source){const shader=gl.createShader(type);gl.shaderSource(shader,source);gl.compileShader(shader);if(!gl.getShaderParameter(shader,gl.COMPILE_STATUS)){alert("An error occurred compiling the shaders: "+gl.getShaderInfoLog(shader));gl.deleteShader(shader);return null;}
return shader;}
connectInputs();function connectInputs(){connectSlider("#force-input","force");connectSlider("#speed-input","speed");connectSlider("#stiffness-input","bristleStiffness");connectSlider("#bristle-length-input","bristleLength");create360AngleInput("#azimuth-input","azimuth");create360AngleInput("#movement-direction-input","movement");create90AngleInput("#altitude-input","altitude");connectDisplayModeButton("#shape-button",0);connectDisplayModeButton("#noise-button",1);connectDisplayModeButton("#pressure-button",2);connectDisplayModeButton("#bristle-color-button",3);connectDisplayModeButton("#result-button",4);}
function connectDisplayModeButton(elemId,mode){var inputElem=document.querySelector(elemId);inputElem.onclick=()=>{displayMode=mode;};if(inputElem.checked){displayMode=mode;}}
function connectSlider(elemId,valueName){var inputElem=document.querySelector(elemId);inputElem.oninput=function(event){pencilInputs[valueName]=parseFloat(inputElem.value);}
inputElem.value=pencilInputs[valueName];}
function create360AngleInput(elemId,valueName){var angleInput=document.querySelector(elemId);var thumb=angleInput.getElementsByClassName("thumb")[0];var angleLabel=angleInput.getElementsByTagName("h2")[0];var boundingRect=angleInput.getBoundingClientRect();var inputStyles=getComputedStyle(angleInput);var inputWidth=boundingRect.width;var inputBorderWidth=parseInt(inputStyles.getPropertyValue("border-left-width"),10);var thumbWidth=thumb.getBoundingClientRect().width;var thumbHeight=thumb.getBoundingClientRect().height;var centerX=boundingRect.left+boundingRect.width/2;var centerY=boundingRect.top+boundingRect.height/2;var isDragging=false;const onMouseDown=()=>{isDragging=true;};const onMouseUp=()=>{isDragging=false;};const onMouseMove=(event)=>{if(isDragging){var angle=Math.atan2(event.clientY-centerY,event.clientX-centerX);setThumbPosition(angle);pencilInputs[valueName]=-angle*180/Math.PI+(angle>0?360:0);updateLabel(angleLabel,pencilInputs[valueName]);return true;}
return false;}
thumb.addEventListener("mousedown",(event)=>{onMouseDown();event.preventDefault();});document.addEventListener("mouseup",()=>{onMouseUp();});document.addEventListener("mousemove",function(event){if(onMouseMove(event)){event.preventDefault();}});thumb.addEventListener("touchstart",(event)=>{onMouseDown();event.preventDefault();},{passive:false});document.addEventListener("touchend",function(event){onMouseUp();},{passive:false});document.addEventListener("touchcancel",function(event){onMouseUp();event.preventDefault();},{passive:false});document.addEventListener("touchmove",function(event){if(onMouseMove(event.touches[0])){event.preventDefault();}},{passive:false});setThumbPosition(-pencilInputs[valueName]*Math.PI/180);updateLabel(angleLabel,pencilInputs[valueName]);function setThumbPosition(angle){var cX=0.5*(Math.cos(-angle)*(inputWidth-1*inputBorderWidth)+inputWidth-2*inputBorderWidth);var cY=0.5*(Math.sin(angle)*(inputWidth-1*inputBorderWidth)+inputWidth-2*inputBorderWidth);var newLeft=(cX-thumbWidth/2);var newTop=(cY-thumbHeight/2);thumb.style.left=newLeft+"px";thumb.style.top=newTop+"px";}
function updateLabel(label,degrees){label.innerHTML=parseInt(pencilInputs[valueName]+(degrees<0?360:0))+"°";}}
function create90AngleInput(elemId,valueName){var angleInput=document.querySelector(elemId);var thumb=angleInput.getElementsByClassName("thumb")[0];var angleLabel=angleInput.getElementsByTagName("h2")[0];var boundingRect=angleInput.getBoundingClientRect();var inputStyles=getComputedStyle(angleInput);var inputWidth=boundingRect.width;var inputBorderWidth=parseInt(inputStyles.getPropertyValue("border-right-width"),10);var thumbWidth=thumb.getBoundingClientRect().width;var pivotX=boundingRect.left+inputBorderWidth/2;var pivotY=boundingRect.top+inputWidth-inputBorderWidth/2;var isDragging=false;const onMouseDown=()=>{isDragging=true;};const onMouseUp=()=>{isDragging=false;};const onMouseMove=(event)=>{if(isDragging){var angle=Math.max(-Math.PI/2,Math.min(0,Math.atan2(event.clientY-pivotY,event.clientX-pivotX)));setThumbPosition(angle);pencilInputs[valueName]=-angle*180/Math.PI;updateLabel(angleLabel,pencilInputs[valueName]);return true;}
return false;};thumb.addEventListener("mousedown",(event)=>{onMouseDown();event.preventDefault();});document.addEventListener("mouseup",function(event){onMouseUp();});document.addEventListener("mousemove",function(event){if(onMouseMove(event)){event.preventDefault();}});thumb.addEventListener("touchstart",(event)=>{onMouseDown();event.preventDefault();},{passive:false});document.addEventListener("touchend",function(event){onMouseUp();},{passive:false});document.addEventListener("touchcancel",function(event){onMouseUp();event.preventDefault();},{passive:false});document.addEventListener("touchmove",function(event){if(onMouseMove(event.touches[0])){event.preventDefault();}},{passive:false});setThumbPosition(-pencilInputs[valueName]*Math.PI/180);updateLabel(angleLabel,pencilInputs[valueName]);function setThumbPosition(angle){var cX=(Math.cos(-angle)*(inputWidth-0.5*inputBorderWidth));var cY=(Math.sin(angle)*(inputWidth-0.5*inputBorderWidth));var newLeft=cX-inputBorderWidth/2;var newTop=cY+inputWidth-inputBorderWidth/2;newLeft=cX-0.5*thumbWidth;newTop=cY+inputWidth-1*inputBorderWidth-0.5*thumbWidth;thumb.style.left=newLeft+"px";thumb.style.top=newTop+"px";}
function updateLabel(label,degrees){label.innerHTML=parseInt(pencilInputs[valueName]+(degrees<0?360:0))+"°";}}